version: "3.8"

services:
  message-router:
    extends:
      file: java-service.yml
      service: java_app
    ports:
      - "20777:20777/udp"
    environment:
      JVM_OPTS: >
        -DKAFKA_BOOTSTRAP_SERVER=kafka:9092
      TARGET_CLASS: xyz.rganvir.f1telemetry.router.App
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  visualizer:
    image: rganvir/visualizer
    build: ../visualizer
    depends_on:
      - kafka
    restart: on-failure
    ports:
      - "8050:8050"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
  # Mock UDP feed producer. Useful for testing.
  mock-feed:
    image: python:3.10
    environment:
      - SINK_HOST=message-router
      - SINK_PORT=20777
      - WAIT_MS=50
      - PACKETS_SRC=/packet_dump/small/
    volumes:
      - ./generate_udp_feed.py:/script.py
      - ../packet_dump:/packet_dump
    command: [ "python", "-u", "./script.py" ]
